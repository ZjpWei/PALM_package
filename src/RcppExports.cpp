// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// palm_multi_rcpp
List palm_multi_rcpp(List null_obj, List SUB_id, CharacterVector study_ID, CharacterVector feature_ID, List Cov_int_info, List Sample_info);
RcppExport SEXP _PALM_palm_multi_rcpp(SEXP null_objSEXP, SEXP SUB_idSEXP, SEXP study_IDSEXP, SEXP feature_IDSEXP, SEXP Cov_int_infoSEXP, SEXP Sample_infoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type null_obj(null_objSEXP);
    Rcpp::traits::input_parameter< List >::type SUB_id(SUB_idSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type study_ID(study_IDSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type feature_ID(feature_IDSEXP);
    Rcpp::traits::input_parameter< List >::type Cov_int_info(Cov_int_infoSEXP);
    Rcpp::traits::input_parameter< List >::type Sample_info(Sample_infoSEXP);
    rcpp_result_gen = Rcpp::wrap(palm_multi_rcpp(null_obj, SUB_id, study_ID, feature_ID, Cov_int_info, Sample_info));
    return rcpp_result_gen;
END_RCPP
}
// palm_rcpp
List palm_rcpp(List null_obj, List covariate_interest, List SUB_id, CharacterVector study_ID, CharacterVector feature_ID, List Cov_int_info, List Sample_info);
RcppExport SEXP _PALM_palm_rcpp(SEXP null_objSEXP, SEXP covariate_interestSEXP, SEXP SUB_idSEXP, SEXP study_IDSEXP, SEXP feature_IDSEXP, SEXP Cov_int_infoSEXP, SEXP Sample_infoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type null_obj(null_objSEXP);
    Rcpp::traits::input_parameter< List >::type covariate_interest(covariate_interestSEXP);
    Rcpp::traits::input_parameter< List >::type SUB_id(SUB_idSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type study_ID(study_IDSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type feature_ID(feature_IDSEXP);
    Rcpp::traits::input_parameter< List >::type Cov_int_info(Cov_int_infoSEXP);
    Rcpp::traits::input_parameter< List >::type Sample_info(Sample_infoSEXP);
    rcpp_result_gen = Rcpp::wrap(palm_rcpp(null_obj, covariate_interest, SUB_id, study_ID, feature_ID, Cov_int_info, Sample_info));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PALM_palm_multi_rcpp", (DL_FUNC) &_PALM_palm_multi_rcpp, 6},
    {"_PALM_palm_rcpp", (DL_FUNC) &_PALM_palm_rcpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_PALM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
